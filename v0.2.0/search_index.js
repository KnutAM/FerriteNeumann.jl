var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = FerriteNeumann","category":"page"},{"location":"#FerriteNeumann","page":"Home","title":"FerriteNeumann","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"FerriteNeumann.jl:  Simple Neumann boundary conditions for Ferrite.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"NeumannHandler\nNeumann","category":"page"},{"location":"#FerriteNeumann.NeumannHandler","page":"Home","title":"FerriteNeumann.NeumannHandler","text":"NeumannHandler(dh::AbstractDofHandler)\n\nThe handler of all the Neumann boundary conditions in dh that can be used to apply the neumann contribution to the  external \"force\"-vector, fext:\n\nfext = zeros(ndofs(dh))\nnh=NeumannHandler(dh)\nadd!(nh, Neumann(...))  # Add boundary conditions\nfor t in timesteps\n    fill!(fext, 0)\n    apply!(fext, nh, t) # Add contributions to `fext`\n    ...\nend\n\n\n\n\n\n","category":"type"},{"location":"#FerriteNeumann.Neumann","page":"Home","title":"FerriteNeumann.Neumann","text":"Neumann(field_name::Symbol, fv_info::Union{FaceValues,QuadratureRule,Int}, faceset::Set{FaceIndex}, f)\n\nDefine a Neumann contribution with the weak forms according to \n\nint_Gamma f  delta u  mathrmdGamma quad textScalar fields \n\nint_Gamma boldsymbolf cdot boldsymboldelta u  mathrmdGamma\nquad textVector fields \n\nwhere Gamma is the boundary where the contribution is active.  f, or boldsymbolf, is the prescribed Neumann value,  defined by a function with signatures\n\nf(x::Vec, time, n::Vec) -> Number (Scalar field)\n\nf(x::Vec, time, n::Vec) -> Vec{dim} (Vector field)\n\nwhere x is the spatial position of the current quadrature point, time is the  current time, and n is the face normal vector. The remaining input arguments are\n\nfieldname describes the field on which the boundary condition should abstract\nfv_info gives required input to determine the facevalues. The following input types are accepted:\nFaceValues matching the interpolation for fieldname for the faces in faceset and output of f\nQuadratureRule matching the interpolation for fieldname for faces in faceset FaceValues are deduced  from the output of f\nInt giving the integration order to use. FaceValues are deduced from the interpolation  of fieldname and the output of f. \nfaceset describes which faces the BC is applied to\n\n\n\n\n\n","category":"type"}]
}
